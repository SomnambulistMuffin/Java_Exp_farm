/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vut.gui;


import java.util.ArrayList;
import javax.swing.JOptionPane;
import vut.Employee;


/**
 * Accept an employee's data and store it in an array list
 *
 * Allow processing of multiple employees
 *
 * @author 2000000
 */
public class EmployeeApplication extends javax.swing.JFrame
{

    ArrayList<Employee> arrListEmp = new ArrayList<>();
    
    

    /**
     * Creates new form EmployeeApplication
     */
    public EmployeeApplication()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAddEmployee = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        lblSaveMsg = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        pnlProcessEmp = new javax.swing.JPanel();
        btnDisplaySelected = new javax.swing.JButton();
        btnHighest = new javax.swing.JButton();
        btnIncreaseEmp = new javax.swing.JButton();
        btnIncreaseAll = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstNames = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtData = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Form -  Student Surname: XXXXXXXX (2000000)");

        pnlAddEmployee.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Employee Data"));

        jLabel1.setText("Name:");

        txtName.setColumns(20);

        jLabel2.setText("Salary:");

        txtSalary.setColumns(20);

        lblSaveMsg.setForeground(new java.awt.Color(51, 102, 255));
        lblSaveMsg.setText("Enter the data and click on the Save button");

        btnSave.setText("Save Employee");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddEmployeeLayout = new javax.swing.GroupLayout(pnlAddEmployee);
        pnlAddEmployee.setLayout(pnlAddEmployeeLayout);
        pnlAddEmployeeLayout.setHorizontalGroup(
            pnlAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                .addGroup(pnlAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblSaveMsg))
                    .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSave))
                    .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(42, 42, 42)
                                .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(42, 42, 42)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        pnlAddEmployeeLayout.setVerticalGroup(
            pnlAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddEmployeeLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(pnlAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(lblSaveMsg)
                .addGap(30, 30, 30)
                .addComponent(btnSave)
                .addGap(25, 25, 25))
        );

        pnlProcessEmp.setBorder(javax.swing.BorderFactory.createTitledBorder("Process Employee"));
        pnlProcessEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnDisplaySelected.setText("Display Selected Employee's Data");
        btnDisplaySelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplaySelectedActionPerformed(evt);
            }
        });

        btnHighest.setText("Display Higest Salary");
        btnHighest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighestActionPerformed(evt);
            }
        });

        btnIncreaseEmp.setText("Increase Selected Employee's Salary");
        btnIncreaseEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncreaseEmpActionPerformed(evt);
            }
        });

        btnIncreaseAll.setText("Increase ALL Employees Salaries");
        btnIncreaseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncreaseAllActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lstNames.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(lstNames);

        jScrollPane1.setEnabled(false);

        txtData.setEditable(false);
        txtData.setColumns(20);
        txtData.setRows(5);
        jScrollPane1.setViewportView(txtData);

        javax.swing.GroupLayout pnlProcessEmpLayout = new javax.swing.GroupLayout(pnlProcessEmp);
        pnlProcessEmp.setLayout(pnlProcessEmpLayout);
        pnlProcessEmpLayout.setHorizontalGroup(
            pnlProcessEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProcessEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(pnlProcessEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIncreaseAll)
                    .addGroup(pnlProcessEmpLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear))
                    .addComponent(btnDisplaySelected)
                    .addComponent(btnHighest)
                    .addComponent(btnIncreaseEmp))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlProcessEmpLayout.setVerticalGroup(
            pnlProcessEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProcessEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProcessEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlProcessEmpLayout.createSequentialGroup()
                        .addComponent(btnDisplaySelected)
                        .addGap(13, 13, 13)
                        .addComponent(btnHighest)
                        .addGroup(pnlProcessEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProcessEmpLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(btnClear))
                            .addGroup(pnlProcessEmpLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addComponent(btnIncreaseEmp))
                    .addComponent(jScrollPane3))
                .addGap(18, 18, 18)
                .addComponent(btnIncreaseAll)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pnlAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlProcessEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlProcessEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        String name;
        double salary;
        Employee objEmp;

        try
        {
            name = txtName.getText();
            salary = Double.parseDouble(txtSalary.getText()); //might raise NumberFormatException

            objEmp = new Employee(name, salary);  //might raise IllegalArgumentException
            arrListEmp.add(objEmp);

            showAllEmployees();
            txtName.setText("");
            txtSalary.setText("");
            txtName.requestFocus();
          
        }
        catch (NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "ERROR! Invalid numeric value\n" + ex.getMessage());
            txtSalary.requestFocus();
        }
        catch (IllegalArgumentException ex)
        {
            JOptionPane.showMessageDialog(this, "ERROR! Employee data invalid\n" + ex.getMessage());
            txtName.requestFocus();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDisplaySelectedActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDisplaySelectedActionPerformed
    {//GEN-HEADEREND:event_btnDisplaySelectedActionPerformed
        int position;
        Employee objEmp;

        position = lstNames.getSelectedIndex();
        if (position >= 0 && position < arrListEmp.size())
        {
            objEmp = arrListEmp.get(position);

            txtData.setText("Name:" + objEmp.getName()
                    + "\nSalary:" + String.format("%5.2f", objEmp.getSalary()));

        }
        else
        {
            JOptionPane.showMessageDialog(this, "ERROR! Please select an employee");
        }
    }//GEN-LAST:event_btnDisplaySelectedActionPerformed

    private void btnHighestActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnHighestActionPerformed
    {//GEN-HEADEREND:event_btnHighestActionPerformed
        int highPosition;
        Employee objEmp;

        highPosition = 0;
        for (int i = 1; i < arrListEmp.size(); i++)
        {
            if (arrListEmp.get(i).getSalary() > arrListEmp.get(highPosition).getSalary())
            {
                highPosition = i;
            }
        }

        objEmp = arrListEmp.get(highPosition);
        txtData.setText("Name:" + objEmp.getName()
                + "\nSalary:" + String.format("%5.2f", objEmp.getSalary()));

    }//GEN-LAST:event_btnHighestActionPerformed

    private void btnIncreaseEmpActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnIncreaseEmpActionPerformed
    {//GEN-HEADEREND:event_btnIncreaseEmpActionPerformed
        int position;
        Employee objEmp;
        double percent;

        try
        {
            position = lstNames.getSelectedIndex();
            if (position >= 0 && position < arrListEmp.size())
            {
                objEmp = arrListEmp.get(position);

                percent = Double.parseDouble(JOptionPane.showInputDialog("Enter the percentage increase"));
                objEmp.increaseSalary(percent);

                JOptionPane.showMessageDialog(this, "Employee " + objEmp.getName() 
                        + " salary increased to " + objEmp.getSalary());
                txtData.setText("");  //delete any data that might be displayed
            }
            else
            {
                JOptionPane.showMessageDialog(this, "ERROR! Please select an employee");
            }
        }
        catch (NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "ERROR! Invalid numeric value\n" + ex.getMessage());
        }
        catch (IllegalArgumentException ex)
        {
            JOptionPane.showMessageDialog(this, "ERROR! Employee data invalid\n" + ex.getMessage());
        }
    }//GEN-LAST:event_btnIncreaseEmpActionPerformed

    private void btnIncreaseAllActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnIncreaseAllActionPerformed
    {//GEN-HEADEREND:event_btnIncreaseAllActionPerformed
        Employee objEmp;
        double percent;

        try
        {
            percent = Double.parseDouble(JOptionPane.showInputDialog("Enter the percentage increase"));
            for (int i = 0; i < arrListEmp.size(); i++)
            {
                objEmp = arrListEmp.get(i);

                objEmp.increaseSalary(percent);
            }
            JOptionPane.showMessageDialog(this, "All salaried increased");
            txtData.setText("");  //delete any data that might be displayed
        }
        catch (NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "ERROR! Invalid numeric value\n" + ex.getMessage());
        }
        catch (IllegalArgumentException ex)
        {
            JOptionPane.showMessageDialog(this, "ERROR! Employee data invalid\n" + ex.getMessage());
        }
    }//GEN-LAST:event_btnIncreaseAllActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnClearActionPerformed
    {//GEN-HEADEREND:event_btnClearActionPerformed

        txtData.setText("");
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void showAllEmployees()
    {
        //create an array to store the names of all the staff
        String[] arNames = new String[arrListEmp.size()];

        //load all the names in the array
        for (int i = 0; i < arNames.length; i++)
        {
            arNames[i] = arrListEmp.get(i).getName();
        }

        //display the names in the list component
        lstNames.setListData(arNames);
        txtData.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(EmployeeApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(EmployeeApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(EmployeeApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(EmployeeApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new EmployeeApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDisplaySelected;
    private javax.swing.JButton btnHighest;
    private javax.swing.JButton btnIncreaseAll;
    private javax.swing.JButton btnIncreaseEmp;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblSaveMsg;
    private javax.swing.JList<String> lstNames;
    private javax.swing.JPanel pnlAddEmployee;
    private javax.swing.JPanel pnlProcessEmp;
    private javax.swing.JTextArea txtData;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
